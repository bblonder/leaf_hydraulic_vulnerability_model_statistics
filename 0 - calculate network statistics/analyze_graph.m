
NUM_BINS = 10; % this is an editable parameter

% the rest is hard-coded
load('../00-Database/Net.mat');
Nodes = readtable('../00-Database/Nodes.txt');
NUM_NETWORKS = size(Net_i,1);
NUM_NODES_TOTAL = size(Nodes,1);

vein_radius_max = max(max(Net_i(:,:,4)));

% figure out inter-node distance
coord_1 = table2array(Nodes(Net_i(4,2,2),:));
coord_2 = table2array(Nodes(Net_i(4,2,3),:));

vein_length = 0.1;%#sqrt(sum((coord_2 - coord_1).^2))

% figure out leaf area
leaf_area = pi*1^2;

% initialize results matrix
result = nan(NUM_NETWORKS*NUM_BINS,6);

% set up a counter
index_result = 1;

for index_network=1:NUM_NETWORKS

    ND_this = Net_i(index_network,:,:);
    % sqrt transform radii for bins
    vein_radius_range = linspace(0,(vein_radius_max).^(1/2),NUM_BINS).^2;
    
    for index_radius=1:NUM_BINS
        vein_radius_this = vein_radius_range(index_radius);
        rows_this = (ND_this(:,:,4) > vein_radius_this);
        
        fprintf('%d/%d %d/%d\n',index_network, NUM_NETWORKS, index_radius, NUM_BINS)

        g = graph(ND_this(:,rows_this,2),ND_this(:,rows_this,3),ND_this(:,rows_this,4),NUM_NODES_TOTAL);
        
        %if (size(g.Edges,1)>0)
        %    plot(g, 'XData',Nodes{:,1},'YData',Nodes{:,2},'LineWidth',5*g.Edges.Weight/max(g.Edges.Weight))
        %else
        %    plot(g, 'XData',Nodes{:,1},'YData',Nodes{:,2})
        %end

        
        cb = cyclebasis(g);
        num_cycles = size(cb,1);
        cycle_lengths = cellfun(@length, cb, 'UniformOutput', true);
        mean_perimeter = mean(cycle_lengths);
        
        total_vein_length = size(g.Edges,1);

        vein_density = total_vein_length / leaf_area * vein_length;
        vein_loop_density = num_cycles / leaf_area;
        vein_loop_mean_area = 1 / vein_loop_density;
        vein_mean_perimeter = mean_perimeter * vein_length;
        vein_mean_perimeter_per_loop_area = vein_mean_perimeter / vein_loop_mean_area;
        
        result(index_result,:) = [index_network, index_radius, vein_radius_this, vein_density, vein_loop_density, vein_mean_perimeter_per_loop_area];
            
        % iterate the counter
        index_result = index_result + 1;
    end
end

result_table = array2table(result, 'VariableNames',{'index_network', 'index_radius', 'vein_radius_this', 'vein_density', 'vein_loop_density', 'vein_mean_perimeter_per_loop_area'});

writetable(result_table, '../00-Database/network_hld.csv');
